{"ast":null,"code":"var _jsxFileName = \"F:\\\\CODE\\\\node-server\\\\src\\\\components\\\\ToolsBarComponent.js\";\nimport React from 'react';\n\nclass ToolsBar extends React.Component {\n  render() {\n    let paginateButtons = [];\n    let optionTimer = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    };\n\n    for (let i = 1; i <= this.props.totalPage; i++) {\n      paginateButtons.push(i);\n    }\n\n    console.log(this.props.totalPage);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toolsBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, this.props.totalPage >= 1 ? paginateButtons.map((i, key) => {\n      if (this.props.activePage === i) {\n        console.log(this.props.activePage, i);\n        return /*#__PURE__*/React.createElement(\"button\", {\n          key: key,\n          className: \"paginateButton active\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 44\n          }\n        }, i);\n      } else {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          key: key,\n          className: \"paginateButton\",\n          onClick: () => this.props.paginateLoad(i),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 44\n          }\n        }, i);\n      }\n    }) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"Today: \", new Date().toLocaleString('VN-vn', optionTimer))));\n  }\n\n}\n\nexport default ToolsBar;","map":{"version":3,"sources":["F:/CODE/node-server/src/components/ToolsBarComponent.js"],"names":["React","ToolsBar","Component","render","paginateButtons","optionTimer","weekday","year","month","day","i","props","totalPage","push","console","log","map","key","activePage","paginateLoad","Date","toLocaleString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AACnCC,EAAAA,MAAM,GAAG;AACL,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAIC,WAAW,GAAG;AACdC,MAAAA,OAAO,EAAE,MADK;AAEdC,MAAAA,IAAI,EAAE,SAFQ;AAGdC,MAAAA,KAAK,EAAE,SAHO;AAIdC,MAAAA,GAAG,EAAE;AAJS,KAAlB;;AAMA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAI,KAAKC,KAAL,CAAWC,SAA/B,EAA0CF,CAAC,EAA3C,EAA8C;AAC1CN,MAAAA,eAAe,CAACS,IAAhB,CAAqBH,CAArB;AACH;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,SAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKD,KAAL,CAAWC,SAAX,IAAwB,CAAxB,GACIR,eAAe,CAACY,GAAhB,CAAoB,CAACN,CAAD,EAAGO,GAAH,KAAW;AAC3B,UAAG,KAAKN,KAAL,CAAWO,UAAX,KAA0BR,CAA7B,EAA+B;AAC3BI,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWO,UAAvB,EAAmCR,CAAnC;AACA,4BAAO;AAAQ,UAAA,GAAG,EAAEO,GAAb;AAAkB,UAAA,SAAS,EAAC,uBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqDP,CAArD,CAAP;AACH,OAHD,MAGK;AACD,4BAAO;AAAQ,UAAA,GAAG,EAAEO,GAAb;AAAkB,UAAA,SAAS,EAAC,gBAA5B;AAA6C,UAAA,OAAO,EAAE,MAAM,KAAKN,KAAL,CAAWQ,YAAX,CAAwBT,CAAxB,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyFA,CAAzF,CAAP;AACH;AACJ,KAPD,CADJ,GAUI,IAZZ,CADJ,eAgBI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,IAAIU,IAAJ,GAAWC,cAAX,CAA0B,OAA1B,EAAkChB,WAAlC,CAAX,CADA,CAhBJ,CADJ;AAsBH;;AAnCkC;;AAsCvC,eAAeJ,QAAf","sourcesContent":["import React from 'react';\r\nclass ToolsBar extends React.Component {\r\n    render() {\r\n        let paginateButtons = [];\r\n        let optionTimer = {\r\n            weekday: 'long', \r\n            year: 'numeric', \r\n            month: 'numeric', \r\n            day: 'numeric'\r\n        };\r\n        for(let i = 1; i <= this.props.totalPage; i++){\r\n            paginateButtons.push(i)\r\n        }\r\n        console.log(this.props.totalPage)\r\n        return ( \r\n            <div className=\"toolsBar\">\r\n                <div>\r\n                    {\r\n                        this.props.totalPage >= 1? \r\n                            paginateButtons.map((i,key) => {\r\n                                if(this.props.activePage === i){\r\n                                    console.log(this.props.activePage, i)\r\n                                    return <button key={key} className=\"paginateButton active\">{i}</button>\r\n                                }else{\r\n                                    return <button key={key} className=\"paginateButton\" onClick={() => this.props.paginateLoad(i)}>{i}</button>\r\n                                }\r\n                            })\r\n                        :\r\n                            null\r\n                    }\r\n                </div>\r\n                <div className=\"timer\">\r\n                <p>Today: {new Date().toLocaleString('VN-vn',optionTimer)}</p>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ToolsBar;"]},"metadata":{},"sourceType":"module"}