{"ast":null,"code":"import { put, takeEvery } from \"redux-saga/effects\";\nimport * as types from \"../constant\";\nimport updateStatus from \"../fetchSagas/updateStatus\";\n\nfunction* changeStatus(action) {\n  try {\n    const {\n      id,\n      todo,\n      status,\n      onUpdate,\n      activePage\n    } = action.payload;\n    yield updateStatus({\n      id: id,\n      todo: todo,\n      status: status,\n      onUpdate\n    });\n    yield put({\n      type: types.UPDATE_STATUS_ITEM_SUCCESS\n    });\n    yield put({\n      type: types.PAGINATE_ITEM_REQUEST,\n      payload: activePage\n    });\n  } catch (error) {\n    yield put({\n      type: types.UPDATE_STATUS_EDITING_FAILURE,\n      payload: error.message\n    });\n  }\n}\n\nfunction* changeStatusUpdate(action) {\n  // console.log(action)\n  try {\n    const {\n      id,\n      onUpdate,\n      activePage,\n      todo,\n      status\n    } = action.payload;\n    yield updateStatus({\n      id: id,\n      todo: todo,\n      onUpdate: onUpdate,\n      status: status\n    });\n    yield put({\n      type: types.UPDATE_STATUS_EDITING_SUCCESS,\n      payload: {\n        id: id,\n        todo: todo,\n        onUpdate: true\n      }\n    });\n    yield put({\n      type: types.PAGINATE_ITEM_REQUEST,\n      payload: activePage\n    });\n  } catch (error) {\n    yield put({\n      type: types.UPDATE_STATUS_EDITING_FAILURE,\n      payload: error.message\n    });\n  }\n}\n\nconst updateNewStatus = takeEvery(types.UPDATE_STATUS_ITEM_REQUEST, changeStatus);\nconst updateStatusEdit = takeEvery(types.UPDATE_STATUS_EDITING_REQUEST, changeStatusUpdate);\nexport { updateNewStatus, updateStatusEdit };","map":{"version":3,"sources":["F:/CODE/node-server/src/sagas/updateStatusSaga.js"],"names":["put","takeEvery","types","updateStatus","changeStatus","action","id","todo","status","onUpdate","activePage","payload","type","UPDATE_STATUS_ITEM_SUCCESS","PAGINATE_ITEM_REQUEST","error","UPDATE_STATUS_EDITING_FAILURE","message","changeStatusUpdate","UPDATE_STATUS_EDITING_SUCCESS","updateNewStatus","UPDATE_STATUS_ITEM_REQUEST","updateStatusEdit","UPDATE_STATUS_EDITING_REQUEST"],"mappings":"AAAA,SAAQA,GAAR,EAAYC,SAAZ,QAA4B,oBAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,aAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,UAAUC,YAAV,CAAuBC,MAAvB,EAA8B;AAC1B,MAAI;AACA,UAAM;AAACC,MAAAA,EAAD;AAAIC,MAAAA,IAAJ;AAASC,MAAAA,MAAT;AAAgBC,MAAAA,QAAhB;AAAyBC,MAAAA;AAAzB,QAAuCL,MAAM,CAACM,OAApD;AACA,UAAMR,YAAY,CAAC;AACfG,MAAAA,EAAE,EAAEA,EADW;AAEfC,MAAAA,IAAI,EAAEA,IAFS;AAGfC,MAAAA,MAAM,EAAEA,MAHO;AAIfC,MAAAA;AAJe,KAAD,CAAlB;AAMA,UAAMT,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAEV,KAAK,CAACW;AADN,KAAD,CAAT;AAGA,UAAMb,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAEV,KAAK,CAACY,qBADN;AAENH,MAAAA,OAAO,EAAED;AAFH,KAAD,CAAT;AAIH,GAfD,CAeE,OAAOK,KAAP,EAAc;AACZ,UAAMf,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAEV,KAAK,CAACc,6BADN;AAENL,MAAAA,OAAO,EAAEI,KAAK,CAACE;AAFT,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUC,kBAAV,CAA6Bb,MAA7B,EAAoC;AAChC;AACA,MAAI;AACA,UAAM;AAAEC,MAAAA,EAAF;AAAMG,MAAAA,QAAN;AAAgBC,MAAAA,UAAhB;AAA4BH,MAAAA,IAA5B;AAAkCC,MAAAA;AAAlC,QAA6CH,MAAM,CAACM,OAA1D;AACA,UAAMR,YAAY,CAAC;AACfG,MAAAA,EAAE,EAAEA,EADW;AAEfC,MAAAA,IAAI,EAAEA,IAFS;AAGfE,MAAAA,QAAQ,EAAEA,QAHK;AAIfD,MAAAA,MAAM,EAAEA;AAJO,KAAD,CAAlB;AAOA,UAAMR,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAEV,KAAK,CAACiB,6BADN;AAENR,MAAAA,OAAO,EAAE;AACLL,QAAAA,EAAE,EAAEA,EADC;AAELC,QAAAA,IAAI,EAAEA,IAFD;AAGLE,QAAAA,QAAQ,EAAE;AAHL;AAFH,KAAD,CAAT;AASA,UAAMT,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAEV,KAAK,CAACY,qBADN;AAENH,MAAAA,OAAO,EAAED;AAFH,KAAD,CAAT;AAIH,GAtBD,CAsBE,OAAOK,KAAP,EAAc;AACZ,UAAMf,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAEV,KAAK,CAACc,6BADN;AAENL,MAAAA,OAAO,EAAEI,KAAK,CAACE;AAFT,KAAD,CAAT;AAIH;AACJ;;AAED,MAAMG,eAAe,GAAGnB,SAAS,CAACC,KAAK,CAACmB,0BAAP,EAAmCjB,YAAnC,CAAjC;AACA,MAAMkB,gBAAgB,GAAGrB,SAAS,CAACC,KAAK,CAACqB,6BAAP,EAAsCL,kBAAtC,CAAlC;AACA,SACIE,eADJ,EAEIE,gBAFJ","sourcesContent":["import {put,takeEvery} from \"redux-saga/effects\"\r\nimport * as types from \"../constant\"\r\nimport updateStatus from \"../fetchSagas/updateStatus\"\r\n\r\nfunction* changeStatus(action){\r\n    try {\r\n        const {id,todo,status,onUpdate,activePage} = action.payload;\r\n        yield updateStatus({\r\n            id: id, \r\n            todo: todo, \r\n            status: status, \r\n            onUpdate\r\n        });\r\n        yield put({\r\n            type: types.UPDATE_STATUS_ITEM_SUCCESS\r\n        })\r\n        yield put({\r\n            type: types.PAGINATE_ITEM_REQUEST,\r\n            payload: activePage\r\n        })\r\n    } catch (error) {\r\n        yield put({\r\n            type: types.UPDATE_STATUS_EDITING_FAILURE,\r\n            payload: error.message\r\n        })\r\n    }\r\n}\r\n\r\nfunction* changeStatusUpdate(action){\r\n    // console.log(action)\r\n    try {\r\n        const { id, onUpdate, activePage, todo, status } = action.payload\r\n        yield updateStatus({\r\n            id: id, \r\n            todo: todo, \r\n            onUpdate: onUpdate, \r\n            status: status\r\n        });\r\n\r\n        yield put({\r\n            type: types.UPDATE_STATUS_EDITING_SUCCESS,\r\n            payload: {\r\n                id: id,\r\n                todo: todo,\r\n                onUpdate: true\r\n            }\r\n        })\r\n\r\n        yield put({\r\n            type: types.PAGINATE_ITEM_REQUEST,\r\n            payload: activePage\r\n        })\r\n    } catch (error) {\r\n        yield put({\r\n            type: types.UPDATE_STATUS_EDITING_FAILURE,\r\n            payload: error.message\r\n        })\r\n    }\r\n}\r\n\r\nconst updateNewStatus = takeEvery(types.UPDATE_STATUS_ITEM_REQUEST, changeStatus)\r\nconst updateStatusEdit = takeEvery(types.UPDATE_STATUS_EDITING_REQUEST, changeStatusUpdate)\r\nexport {\r\n    updateNewStatus,\r\n    updateStatusEdit\r\n}"]},"metadata":{},"sourceType":"module"}