{"ast":null,"code":"import { put, takeEvery } from \"redux-saga/effects\";\nimport * as types from \"../constant\";\nimport removeToDo from '../fetchSagas/removeToDo';\nimport getList from '../fetchSagas/getList';\n\nfunction* removeItem(action) {\n  console.log(action.payload);\n\n  try {\n    const {\n      id,\n      activePage\n    } = action.payload; //call removeAPI\n\n    yield removeToDo(id);\n    yield put({\n      type: types.REMOVE_ITEM_SUCCESS\n    }); //condition if last page is out\n\n    const totalItem = yield getList();\n    const totalPage = Math.ceil(totalItem.length / 4);\n\n    if (totalPage >= activePage) {\n      yield put({\n        type: types.PAGINATE_ITEM_REQUEST,\n        payload: activePage\n      });\n    } else {\n      yield put({\n        type: types.PAGINATE_ITEM_REQUEST,\n        payload: totalPage\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: types.REMOVE_ITEM_FAILURE,\n      payload: {\n        errorMessage: error.message\n      }\n    });\n  }\n}\n\nconst removeData = takeEvery(types.REMOVE_ITEM_REQUEST, removeItem);\nexport default removeData;","map":{"version":3,"sources":["F:/CODE/node-server/src/sagas/removeToDoSaga.js"],"names":["put","takeEvery","types","removeToDo","getList","removeItem","action","console","log","payload","id","activePage","type","REMOVE_ITEM_SUCCESS","totalItem","totalPage","Math","ceil","length","PAGINATE_ITEM_REQUEST","error","REMOVE_ITEM_FAILURE","errorMessage","message","removeData","REMOVE_ITEM_REQUEST"],"mappings":"AAAA,SAAQA,GAAR,EAAYC,SAAZ,QAA4B,oBAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,aAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AACA,UAAUC,UAAV,CAAqBC,MAArB,EAA4B;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB;;AACA,MAAI;AACA,UAAM;AAACC,MAAAA,EAAD;AAAKC,MAAAA;AAAL,QAAmBL,MAAM,CAACG,OAAhC,CADA,CAEA;;AACA,UAAMN,UAAU,CAACO,EAAD,CAAhB;AACA,UAAMV,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAEV,KAAK,CAACW;AADN,KAAD,CAAT,CAJA,CAQA;;AACA,UAAMC,SAAS,GAAG,MAAMV,OAAO,EAA/B;AACA,UAAMW,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUH,SAAS,CAACI,MAAV,GAAmB,CAA7B,CAAlB;;AACA,QAAGH,SAAS,IAAIJ,UAAhB,EAA2B;AACvB,YAAMX,GAAG,CAAC;AACNY,QAAAA,IAAI,EAAEV,KAAK,CAACiB,qBADN;AAENV,QAAAA,OAAO,EAAEE;AAFH,OAAD,CAAT;AAIH,KALD,MAKK;AACD,YAAMX,GAAG,CAAC;AACNY,QAAAA,IAAI,EAAEV,KAAK,CAACiB,qBADN;AAENV,QAAAA,OAAO,EAAEM;AAFH,OAAD,CAAT;AAIH;AACJ,GAtBD,CAsBE,OAAOK,KAAP,EAAc;AACZ,UAAMpB,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAEV,KAAK,CAACmB,mBADN;AAENZ,MAAAA,OAAO,EAAE;AACLa,QAAAA,YAAY,EAAEF,KAAK,CAACG;AADf;AAFH,KAAD,CAAT;AAMH;AACJ;;AACD,MAAMC,UAAU,GAAGvB,SAAS,CAACC,KAAK,CAACuB,mBAAP,EAA4BpB,UAA5B,CAA5B;AACA,eAAemB,UAAf","sourcesContent":["import {put,takeEvery} from \"redux-saga/effects\"\r\nimport * as types from \"../constant\"\r\nimport removeToDo from '../fetchSagas/removeToDo'\r\nimport getList from '../fetchSagas/getList'\r\nfunction* removeItem(action){\r\n    console.log(action.payload)\r\n    try {\r\n        const {id, activePage} = action.payload;\r\n        //call removeAPI\r\n        yield removeToDo(id)\r\n        yield put({\r\n            type: types.REMOVE_ITEM_SUCCESS\r\n        })\r\n\r\n        //condition if last page is out\r\n        const totalItem = yield getList();\r\n        const totalPage = Math.ceil(totalItem.length / 4);\r\n        if(totalPage >= activePage){\r\n            yield put({\r\n                type: types.PAGINATE_ITEM_REQUEST,\r\n                payload: activePage\r\n            })\r\n        }else{\r\n            yield put({\r\n                type: types.PAGINATE_ITEM_REQUEST,\r\n                payload: totalPage \r\n            })\r\n        }\r\n    } catch (error) {\r\n        yield put({\r\n            type: types.REMOVE_ITEM_FAILURE,\r\n            payload: {\r\n                errorMessage: error.message\r\n            }\r\n        })\r\n    }\r\n}\r\nconst removeData = takeEvery(types.REMOVE_ITEM_REQUEST, removeItem)\r\nexport default removeData;"]},"metadata":{},"sourceType":"module"}