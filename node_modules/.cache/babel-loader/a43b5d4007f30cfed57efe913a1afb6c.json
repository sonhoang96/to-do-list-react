{"ast":null,"code":"import { put, takeEvery } from \"redux-saga/effects\";\nimport * as types from \"../constant\";\nimport addToDo from '../fetchSagas/addToDo';\nimport getList from '../fetchSagas/getList';\n\nfunction* addNewData(action) {\n  // console.log(action.payload)\n  try {\n    const {\n      todo,\n      status,\n      activePage,\n      onUpdate\n    } = action.payload;\n    yield addToDo({\n      todo: todo,\n      status: status,\n      onUpdate: onUpdate\n    });\n    yield put({\n      type: types.ADD_ITEM_SUCCESS,\n      payload: action.payload\n    });\n    const list = yield getList();\n    const totalPage = Math.ceil(list.length / 4); //if data recieve from server === 0, set activePage = 1\n\n    if (Object.keys(list).length === 0) {\n      let activePage = 1;\n      yield put({\n        type: types.PAGINATE_ITEM_REQUEST,\n        payload: activePage\n      });\n    } else {\n      console.log(totalPage, activePage);\n\n      if (totalPage >= activePage) {\n        yield put({\n          type: types.PAGINATE_ITEM_REQUEST,\n          payload: totalPage\n        });\n      } else {\n        yield put({\n          type: types.PAGINATE_ITEM_REQUEST,\n          payload: activePage\n        });\n      }\n    }\n  } catch (error) {\n    yield put({\n      type: types.ADD_ITEM_FAILURE,\n      payload: {\n        errorMessage: error.message\n      }\n    });\n  }\n}\n\nconst addData = takeEvery(types.ADD_ITEM_REQUEST, addNewData);\nexport default addData;","map":{"version":3,"sources":["F:/CODE/node-server/src/sagas/addToDoSaga.js"],"names":["put","takeEvery","types","addToDo","getList","addNewData","action","todo","status","activePage","onUpdate","payload","type","ADD_ITEM_SUCCESS","list","totalPage","Math","ceil","length","Object","keys","PAGINATE_ITEM_REQUEST","console","log","error","ADD_ITEM_FAILURE","errorMessage","message","addData","ADD_ITEM_REQUEST"],"mappings":"AAAA,SAAQA,GAAR,EAAYC,SAAZ,QAA4B,oBAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,aAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AACA,UAAUC,UAAV,CAAqBC,MAArB,EAA4B;AACxB;AACA,MAAI;AACA,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA,MAAP;AAAeC,MAAAA,UAAf;AAA2BC,MAAAA;AAA3B,QAAuCJ,MAAM,CAACK,OAApD;AACA,UAAMR,OAAO,CAAC;AAACI,MAAAA,IAAI,EAAEA,IAAP;AAAaC,MAAAA,MAAM,EAAEA,MAArB;AAA6BE,MAAAA,QAAQ,EAAEA;AAAvC,KAAD,CAAb;AACA,UAAMV,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAEV,KAAK,CAACW,gBADN;AAENF,MAAAA,OAAO,EAAEL,MAAM,CAACK;AAFV,KAAD,CAAT;AAKA,UAAMG,IAAI,GAAG,MAAMV,OAAO,EAA1B;AACA,UAAMW,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUH,IAAI,CAACI,MAAL,GAAc,CAAxB,CAAlB,CATA,CAUA;;AACA,QAAGC,MAAM,CAACC,IAAP,CAAYN,IAAZ,EAAkBI,MAAlB,KAA6B,CAAhC,EAAkC;AAC9B,UAAIT,UAAU,GAAG,CAAjB;AACA,YAAMT,GAAG,CAAC;AACNY,QAAAA,IAAI,EAAEV,KAAK,CAACmB,qBADN;AAENV,QAAAA,OAAO,EAAEF;AAFH,OAAD,CAAT;AAIH,KAND,MAMK;AACDa,MAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ,EAAsBN,UAAtB;;AACA,UAAGM,SAAS,IAAIN,UAAhB,EAA2B;AACvB,cAAMT,GAAG,CAAC;AACNY,UAAAA,IAAI,EAAEV,KAAK,CAACmB,qBADN;AAENV,UAAAA,OAAO,EAAEI;AAFH,SAAD,CAAT;AAIH,OALD,MAKK;AACD,cAAMf,GAAG,CAAC;AACNY,UAAAA,IAAI,EAAEV,KAAK,CAACmB,qBADN;AAENV,UAAAA,OAAO,EAAEF;AAFH,SAAD,CAAT;AAIH;AACJ;AACJ,GA/BD,CA+BE,OAAOe,KAAP,EAAc;AACZ,UAAMxB,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAEV,KAAK,CAACuB,gBADN;AAENd,MAAAA,OAAO,EAAE;AACLe,QAAAA,YAAY,EAAEF,KAAK,CAACG;AADf;AAFH,KAAD,CAAT;AAMH;AACJ;;AACD,MAAMC,OAAO,GAAG3B,SAAS,CAACC,KAAK,CAAC2B,gBAAP,EAAyBxB,UAAzB,CAAzB;AACA,eAAeuB,OAAf","sourcesContent":["import {put,takeEvery} from \"redux-saga/effects\"\r\nimport * as types from \"../constant\"\r\nimport addToDo from '../fetchSagas/addToDo'\r\nimport getList from '../fetchSagas/getList'\r\nfunction* addNewData(action){\r\n    // console.log(action.payload)\r\n    try {\r\n        const {todo, status, activePage, onUpdate} = action.payload;\r\n        yield addToDo({todo: todo, status: status, onUpdate: onUpdate})\r\n        yield put({\r\n            type: types.ADD_ITEM_SUCCESS,\r\n            payload: action.payload\r\n        })\r\n\r\n        const list = yield getList();\r\n        const totalPage = Math.ceil(list.length / 4);\r\n        //if data recieve from server === 0, set activePage = 1\r\n        if(Object.keys(list).length === 0){\r\n            let activePage = 1;\r\n            yield put({\r\n                type: types.PAGINATE_ITEM_REQUEST,\r\n                payload: activePage\r\n            })\r\n        }else{\r\n            console.log(totalPage,activePage)\r\n            if(totalPage >= activePage){\r\n                yield put({\r\n                    type: types.PAGINATE_ITEM_REQUEST,\r\n                    payload: totalPage\r\n                })\r\n            }else{\r\n                yield put({\r\n                    type: types.PAGINATE_ITEM_REQUEST,\r\n                    payload: activePage\r\n                })\r\n            }\r\n        }\r\n    } catch (error) {\r\n        yield put({\r\n            type: types.ADD_ITEM_FAILURE,\r\n            payload: {\r\n                errorMessage: error.message\r\n            }\r\n        })\r\n    }\r\n}\r\nconst addData = takeEvery(types.ADD_ITEM_REQUEST, addNewData)\r\nexport default addData;"]},"metadata":{},"sourceType":"module"}