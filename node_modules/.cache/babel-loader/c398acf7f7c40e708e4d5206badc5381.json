{"ast":null,"code":"var _jsxFileName = \"F:\\\\CODE\\\\node-server\\\\src\\\\components\\\\HomeComponent.js\";\nimport React from 'react';\nimport AddFormComponent from './AddFormComponent';\nimport '../style/homePage/item-todo.scss';\nimport ToolsBar from './ToolsBarComponent';\n\nclass HomeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n    this.handleChangeStatus = this.handleChangeStatus.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleChangeTodo = this.handleChangeTodo.bind(this);\n    this.handleChangeUpdate = this.handleChangeUpdate.bind(this);\n    this.submitChangeTodo = this.submitChangeTodo.bind(this);\n  }\n\n  componentDidMount() {\n    //update state by recieve data from localState\n    const data = JSON.parse(localStorage.getItem('myData'));\n\n    if (data !== null && data !== undefined) {\n      this.setState({\n        items: [...data]\n      });\n    } else {\n      this.setState({\n        item: []\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //sent data to localStorage\n    localStorage.setItem('myData', JSON.stringify(this.state.items));\n  }\n\n  handleChangeStatus(item) {\n    if (item.status === 'unfinished' && item.onUpdate === false) {\n      this.props.changeStatus({ ...item,\n        status: 'finished',\n        activePage: this.props.activePage\n      });\n    } else {\n      this.props.changeStatus({ ...item,\n        status: 'unfinished',\n        activePage: this.props.activePage\n      });\n    }\n  }\n\n  handleDelete(data, key) {\n    this.props.deleteToDo({\n      id: data.id,\n      activePage: this.props.activePage\n    });\n    const itemsUpdate = this.state.items; //create unique\n\n    const uniqueKey = data.todo + '_' + key; // finding the index of item we wanna edit\n\n    const indexItem = itemsUpdate.findIndex(i => i.key === uniqueKey); //remove this item from state\n\n    itemsUpdate.splice(indexItem, 1);\n    this.setState(itemsUpdate);\n  }\n\n  handleChangeTodo(data, key) {\n    const uniqueKey = data.todo + '_' + key;\n    this.props.statusUpdate({ ...data,\n      onUpdate: true,\n      status: 'unfinished',\n      activePage: this.props.activePage\n    });\n    this.setState({\n      items: [...this.state.items, {\n        id: data.id,\n        todo: data.todo,\n        key: uniqueKey\n      }]\n    });\n  }\n\n  handleChangeUpdate(event, key) {\n    //make a short name of syntax\n    const itemsUpdate = this.state.items; // finding the index of item we wanna edit\n\n    const indexItem = itemsUpdate.findIndex(i => i.key === key); // creating another short name of syntax (this.state.items)\n\n    let items = [...itemsUpdate]; //finding exact item \n\n    let item = { ...items[indexItem]\n    }; //update element todo in this item\n\n    item.todo = event.target.value; //update this item \n\n    items[indexItem] = item; //update new state\n\n    this.setState({\n      items\n    });\n  }\n\n  submitChangeTodo(data, key) {\n    const uniqueKey = data.todo + '_' + key;\n    let items = this.state.items;\n    let indexItem = items.findIndex(i => i.key === uniqueKey);\n    let item = items[indexItem]; //sent request update to server\n\n    this.props.itemUpdate({\n      id: data.id,\n      todo: item.todo,\n      status: 'unfinished',\n      onUpdate: false,\n      activePage: this.props.activePage\n    }); //remove this item which was being send\n\n    items.splice(indexItem, 1);\n    this.setState(items);\n  }\n\n  render() {\n    const itemsUpdate = this.state.items;\n    const bgFinish = {\n      background: 'azure'\n    };\n    const colorToDo = {\n      color: '#5C6BC0',\n      fontWeight: 200\n    };\n    console.log(this.props.activePage);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AddFormComponent, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(ToolsBar, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    })), this.props.listToDo !== undefined && this.props.listToDo ? this.props.listToDo.map((item, key) => {\n      const uniqueKey = item.todo + '_' + key;\n      return (// check status\n        item.status === \"unfinished\" ? /*#__PURE__*/React.createElement(\"div\", {\n          key: uniqueKey,\n          className: \"item-todo\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"item-data\",\n          onClick: () => this.handleChangeStatus(item),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"far fa-circle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 37\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 37\n          }\n        }, item.todo), /*#__PURE__*/React.createElement(\"input\", {\n          //find item base on index of item which in state\n          value: itemsUpdate.findIndex(item => item.key === uniqueKey) !== -1 ? itemsUpdate[itemsUpdate.findIndex(item => item.key === uniqueKey)].todo : '',\n          className: item.onUpdate ? 'edit-form' : 'edit-form-hidden',\n          onChange: event => this.handleChangeUpdate(event, uniqueKey),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 37\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tools\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 33\n          }\n        }, item.onUpdate ? /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fas fa-check-double\",\n          style: {\n            'color': '#8BC34A'\n          },\n          onClick: () => this.submitChangeTodo(item, key),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 41\n          }\n        }) : /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fas fa-pencil-alt\",\n          onClick: () => this.handleChangeTodo(item, key),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 41\n          }\n        }), /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fas fa-minus-circle\",\n          onClick: () => this.handleDelete(item, key),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 41\n          }\n        })))) :\n        /*#__PURE__*/\n        // if todo item finished, the tool edit wouldn't be appear\n        React.createElement(\"div\", {\n          key: uniqueKey,\n          className: \"item-todo\",\n          style: bgFinish,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"item-data\",\n          onClick: () => this.handleChangeStatus(item),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fas fa-check-circle\",\n          style: colorToDo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 37\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          style: colorToDo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 37\n          }\n        }, item.todo)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tools\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fas fa-minus-circle delete-icon\",\n          onClick: () => this.handleDelete(item, key),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 37\n          }\n        })))\n      );\n    }) : null);\n  }\n\n}\n\nexport default HomeComponent;","map":{"version":3,"sources":["F:/CODE/node-server/src/components/HomeComponent.js"],"names":["React","AddFormComponent","ToolsBar","HomeComponent","Component","constructor","props","state","items","handleChangeStatus","bind","handleDelete","handleChangeTodo","handleChangeUpdate","submitChangeTodo","componentDidMount","data","JSON","parse","localStorage","getItem","undefined","setState","item","componentDidUpdate","prevProps","prevState","setItem","stringify","status","onUpdate","changeStatus","activePage","key","deleteToDo","id","itemsUpdate","uniqueKey","todo","indexItem","findIndex","i","splice","statusUpdate","event","target","value","itemUpdate","render","bgFinish","background","colorToDo","color","fontWeight","console","log","listToDo","map","display"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport AddFormComponent from './AddFormComponent'\r\nimport '../style/homePage/item-todo.scss'\r\nimport ToolsBar from './ToolsBarComponent';\r\n\r\nclass HomeComponent extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            items: []\r\n        }\r\n        this.handleChangeStatus = this.handleChangeStatus.bind(this)\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n        this.handleChangeTodo = this.handleChangeTodo.bind(this)\r\n        this.handleChangeUpdate = this.handleChangeUpdate.bind(this)\r\n        this.submitChangeTodo = this.submitChangeTodo.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        //update state by recieve data from localState\r\n        const data = JSON.parse(localStorage.getItem('myData'));\r\n        if(data !== null && data !== undefined){\r\n            this.setState({\r\n                items: [...data]\r\n            })\r\n        }else{\r\n            this.setState({\r\n                item: []\r\n            })\r\n        }\r\n        \r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        //sent data to localStorage\r\n        localStorage.setItem('myData', JSON.stringify(this.state.items))\r\n    }\r\n    handleChangeStatus(item){\r\n        if(item.status === 'unfinished' && item.onUpdate === false){\r\n            this.props.changeStatus({\r\n                ...item, \r\n                status: 'finished', \r\n                activePage: this.props.activePage\r\n            })\r\n        }else{\r\n            this.props.changeStatus({\r\n                ...item, \r\n                status: 'unfinished', \r\n                activePage: this.props.activePage\r\n            })\r\n        }\r\n    }\r\n    handleDelete(data,key){\r\n        this.props.deleteToDo({id: data.id, activePage: this.props.activePage});\r\n        const itemsUpdate = this.state.items;\r\n        //create unique\r\n        const uniqueKey = data.todo + '_' + key;\r\n        // finding the index of item we wanna edit\r\n        const indexItem = itemsUpdate.findIndex(i => i.key === uniqueKey);\r\n\r\n        //remove this item from state\r\n        itemsUpdate.splice(indexItem,1)\r\n        this.setState(itemsUpdate)\r\n    }\r\n    handleChangeTodo(data,key){\r\n        const uniqueKey = data.todo + '_' + key;\r\n        this.props.statusUpdate({\r\n            ...data,\r\n            onUpdate: true,\r\n            status: 'unfinished',\r\n            activePage: this.props.activePage\r\n        });\r\n        this.setState({\r\n            items:[...this.state.items,{id: data.id, todo: data.todo, key: uniqueKey}]\r\n        })\r\n    }\r\n    handleChangeUpdate(event,key){\r\n        //make a short name of syntax\r\n        const itemsUpdate = this.state.items;\r\n        // finding the index of item we wanna edit\r\n        const indexItem = itemsUpdate.findIndex(i => i.key === key);\r\n        // creating another short name of syntax (this.state.items)\r\n        let items = [...itemsUpdate];\r\n        //finding exact item \r\n        let item = {...items[indexItem]};\r\n        //update element todo in this item\r\n        item.todo = event.target.value;\r\n        //update this item \r\n        items[indexItem] = item;\r\n        //update new state\r\n        this.setState({items});\r\n\r\n    }\r\n    submitChangeTodo(data,key){\r\n        const uniqueKey = data.todo + '_' + key;\r\n        let items = this.state.items;\r\n        let indexItem = items.findIndex(i => i.key === uniqueKey);\r\n        let item = items[indexItem];\r\n        //sent request update to server\r\n        this.props.itemUpdate({\r\n            id: data.id,\r\n            todo: item.todo,\r\n            status: 'unfinished',\r\n            onUpdate: false,\r\n            activePage: this.props.activePage\r\n        })\r\n        //remove this item which was being send\r\n        items.splice(indexItem,1)\r\n        this.setState(items)\r\n    }\r\n    render() {\r\n        const itemsUpdate = this.state.items;\r\n        const bgFinish = {\r\n            background: 'azure'\r\n        }\r\n        const colorToDo = {\r\n            color: '#5C6BC0',\r\n            fontWeight: 200\r\n        }\r\n        console.log(this.props.activePage)\r\n        return (\r\n            <div>\r\n                {/* add form */}\r\n                <AddFormComponent {...this.props}/>\r\n                {/* paginate buttons */}\r\n                <ToolsBar {...this.props}/>\r\n                {/* display result */}\r\n                {this.props.listToDo  !== undefined && this.props.listToDo?\r\n                    this.props.listToDo.map((item, key) => {\r\n                        const uniqueKey = item.todo + '_' + key;\r\n                    return (\r\n                        // check status\r\n                        item.status === \"unfinished\"?\r\n                            <div key={uniqueKey} className=\"item-todo\">\r\n                                {/* can't change status item todo if on updating */}\r\n                                <div className=\"item-data\" onClick={() => this.handleChangeStatus(item)}>\r\n                                    <i className=\"far fa-circle\"></i>\r\n                                    <p>{item.todo}</p>\r\n                                    <input\r\n                                        //find item base on index of item which in state\r\n                                        value={\r\n                                            itemsUpdate.findIndex(item => item.key === uniqueKey) !== -1 ?\r\n                                                itemsUpdate[itemsUpdate.findIndex(item => item.key === uniqueKey)].todo\r\n                                            :\r\n                                                ''\r\n                                        } \r\n                                        className={item.onUpdate?\r\n                                                'edit-form'\r\n                                            :\r\n                                                'edit-form-hidden'\r\n                                        }\r\n                                        onChange={(event) => this.handleChangeUpdate(event,uniqueKey)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"tools\">\r\n                                    {/* \r\n                                    _ If item on status UPDATE, icon DELETE would be disappeared \r\n                                    _ Icon SUBMIT would be appeared\r\n                                    */}\r\n                                    {item.onUpdate?\r\n                                        <i className=\"fas fa-check-double\" style={{'color' : '#8BC34A'}} onClick={() => this.submitChangeTodo(item,key)}></i>\r\n                                    :\r\n                                    <div style={{display: 'flex'}}>\r\n                                        <i className=\"fas fa-pencil-alt\" onClick={() => this.handleChangeTodo(item,key)}></i>\r\n                                        <i className=\"fas fa-minus-circle\" onClick={() => this.handleDelete(item, key)}></i>\r\n                                    </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        :\r\n                        // if todo item finished, the tool edit wouldn't be appear\r\n                            <div key={uniqueKey} className=\"item-todo\" style={bgFinish}>\r\n                                <div className=\"item-data\" onClick={() => this.handleChangeStatus(item)}>\r\n                                    <i className=\"fas fa-check-circle\" style={colorToDo}></i>\r\n                                    <p style={colorToDo}>{item.todo}</p>\r\n                                </div>\r\n                                <div className=\"tools\">\r\n                                    <i className=\"fas fa-minus-circle delete-icon\" onClick={() => this.handleDelete(item, key)}></i>\r\n                                </div>\r\n                            </div>\r\n                    )})\r\n                :\r\n                    null\r\n                }\r\n            </div>\r\n         );\r\n    }\r\n}\r\nexport default HomeComponent;"]},"metadata":{},"sourceType":"module"}